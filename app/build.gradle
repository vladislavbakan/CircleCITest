apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def VERSION_CODE = 10
def VERSION_NAME = "1.0.2"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.0"
    defaultConfig {
        applicationId "com.bakan.circlecitest"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode VERSION_CODE
        versionName VERSION_NAME
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'

    testImplementation 'junit:junit:4.12'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

tasks.register("upVersionCode") {
    description = 'Increment versionCode for current versionName and save to versions.config'

    doLast {
        // open props file
        def propsFile = new File('version_codes.properties')
        propsFile.createNewFile()

        // read properties
        def props = new Properties()
        props.load(propsFile.newReader())

        // read current version code
        def version = "version-$VERSION_NAME"
        println("Version: $version")
        def code = props[version] ?: VERSION_CODE
        println("Current code: $code")

        // increase version code
        code = code.toInteger() + 1
        props[version] = code.toString()
        println("Next code: $code")

        // save properties
        props.store(propsFile.newWriter(), null)
    }
}